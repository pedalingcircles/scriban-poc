version: '3.8'

services:
  dev:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../..:/workspaces:cached
      - /var/run/docker.sock:/var/run/docker-host.sock
    command: sleep infinity
    networks:
      - azure-emulator-network
    depends_on:
      servicebus-emulator:
        condition: service_started
      eventhub-emulator:
        condition: service_started
      azurite:
        condition: service_healthy
      sqlserver:
        condition: service_healthy

  sqlserver:
    container_name: "${CONTAINER_PREFIX}-sqlserver"
    image: mcr.microsoft.com/mssql/server:2022-latest
    platform: linux/amd64
    environment:
      - ACCEPT_EULA=${ACCEPT_EULA}
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}
      - MSSQL_PID=Express
    ports:
      - "14330:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      azure-emulator-network:
        aliases:
          - "sqlserver"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P '${MSSQL_SA_PASSWORD}' -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  servicebus-emulator:
    container_name: "${CONTAINER_PREFIX}-servicebus"
    image: mcr.microsoft.com/azure-messaging/servicebus-emulator:latest
    environment:
      SQL_SERVER: "${CONTAINER_PREFIX}-sqlserver"
      MSSQL_SA_PASSWORD: "${MSSQL_SA_PASSWORD}"
      ACCEPT_EULA: ${ACCEPT_EULA}
      SQL_WAIT_INTERVAL: ${SQL_WAIT_INTERVAL}
    ports:
      - "5672:5672"
      - "5300:5300"
    volumes:
      - servicebus-data:/tmp/servicebus
      - "./servicebus-config/config.json:/ServiceBus_Emulator/ConfigFiles/Config.json"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      azure-emulator-network:
        aliases:
          - "servicebus-emulator"
    restart: unless-stopped

  eventhub-emulator:
    container_name: "${CONTAINER_PREFIX}-eventhub"
    image: mcr.microsoft.com/azure-messaging/eventhubs-emulator:latest
    pull_policy: always
    volumes:
      - "./eventhub-config/config.json:/Eventhubs_Emulator/ConfigFiles/Config.json"
    environment:
      - ACCEPT_EULA=Y
      - BLOB_SERVER=${CONTAINER_PREFIX}-azurite
      - METADATA_SERVER=${CONTAINER_PREFIX}-azurite
      - AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=${AZURITE_ACCOUNT_KEY};BlobEndpoint=http://${CONTAINER_PREFIX}-azurite:10000/devstoreaccount1;QueueEndpoint=http://${CONTAINER_PREFIX}-azurite:10001/devstoreaccount1;TableEndpoint=http://${CONTAINER_PREFIX}-azurite:10002/devstoreaccount1;
    ports:
      - "5673:5672"
      - "9092:9092"
      - "5301:5300"
    depends_on:
      azurite:
        condition: service_healthy
    networks:
      - azure-emulator-network
    restart: unless-stopped

  azurite:
    container_name: "${CONTAINER_PREFIX}-azurite"
    image: mcr.microsoft.com/azure-storage/azurite:latest
    command: "azurite --blobHost 0.0.0.0 --blobPort 10000 --queueHost 0.0.0.0 --queuePort 10001 --tableHost 0.0.0.0 --tablePort 10002 --loose --skipApiVersionCheck"
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - azurite-data:/data
    networks:
      - azure-emulator-network

volumes:
  servicebus-data:
  azurite-data:
  sqlserver-data:

networks:
  azure-emulator-network: