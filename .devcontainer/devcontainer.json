e{
    "name": "POC Development",
    "dockerComposeFile": "docker-compose.yml",
    "service": "dev",
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
    "features": {
        "ghcr.io/devcontainers/features/common-utils:2": {
            "configureZshAsDefaultShell": true
        },
        "ghcr.io/devcontainers/features/dotnet:2": {
            "version": "9.0",
            "additionalVersions": "8.0"
        },
        "ghcr.io/devcontainers/features/terraform:1": {
            "version": "latest",
            "installTFsec": true,
            "installTerraformDocs": true
        },
        "ghcr.io/devcontainers/features/azure-cli:1": {
            "version": "latest"
        },
        "ghcr.io/devcontainers/features/git:1": {
            "version": "latest"
        },
        "ghcr.io/devcontainers/features/github-cli:1": {
            "version": "latest"
        },
        "ghcr.io/devcontainers/features/node:1": {
            "version": "lts",
            "installYarn": true
        },
        "ghcr.io/devcontainers/features/powershell:1": {
            "version": "latest"
        }
    },
    "customizations": {
        "vscode": {
            "settings": {
                "dotnet.defaultSolution": "Byvrate.FileProcessing.sln",
                "omnisharp.defaultLaunchSolution": "Byvrate.FileProcessing.sln",
                "terminal.integrated.defaultProfile.linux": "zsh",
                "terminal.integrated.profiles.linux": {
                    "zsh": {
                        "path": "/bin/zsh",
                        "args": ["-l"]
                    },
                    "bash": {
                        "path": "/bin/bash",
                        "args": ["-l"]
                    },
                    "pwsh": {
                        "path": "/usr/bin/pwsh",
                        "args": ["-l"]
                    }
                },
                "github.copilot.enable": {
                    "*": true,
                    "yaml": true,
                    "plaintext": false,
                    "markdown": true
                }
            },
            "extensions": [    
                "GitHub.copilot",
                "GitHub.copilot-chat",
                "ms-dotnettools.csharp",
                "ms-dotnettools.csdevkit",
                "ms-dotnettools.vscode-dotnet-runtime",
                "ms-vscode.vscode-json",
                "hashicorp.terraform",
                "ms-vscode.azurecli",
                "ms-azuretools.vscode-azureresourcegroups",
                "redhat.vscode-yaml",
                "github.vscode-github-actions",
                "eamodio.gitlens",
                "ms-vscode.powershell"
            ]
        }
    },
    "forwardPorts": [5000, 5001, 8080, 5672, 15672, 5671, 9093],
    "portsAttributes": {
        "5672": {
            "label": "Service Bus Emulator - AMQP",
            "onAutoForward": "notify"
        },
        "15672": {
            "label": "Service Bus Emulator - Management UI",
            "onAutoForward": "openBrowser"
        },
        "5671": {
            "label": "Service Bus Emulator - AMQP SSL",
            "onAutoForward": "notify"
        },
        "9093": {
            "label": "Event Hub Emulator - Kafka",
            "onAutoForward": "notify"
        }
    },
    "initializeCommand": "bash ${localWorkspaceFolder}/.devcontainer/init.sh",
    "postCreateCommand": "bash .devcontainer/setup.sh",
    "remoteUser": "vscode"
}